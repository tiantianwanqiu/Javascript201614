1.sort(function(a,b){return b-a});//从大到小排；
2.删除数组中的最后一项内容：
ary.length--; ary.splice(ary.length-1,1);ary.splice(ary.length-1); ary.pop();
ary.length=ary.length-1;
3. slice(n-1,m);
4.获取当前浏览器可视区域的宽度:
document.documentElement.clientWidth||document.body.clientWidth;
5.parent.appendChild(newEle); parent.insertBefore(newEle,oldEle);
oDiv.innerHTML+='<div></div>';
6.function prev(curEle){
    if(curEle.previousElementSibling){//兼容标准浏览器
        return curEle.previousElementSibling
    }
    //对IE浏览器的处理；
    var pre=curEle.previousSibling;
    while(pre && pre.nodeType!==1){
        pre=pre.previousSibling;
    }
    return pre;
}
7.Math.round(Math.random()*(m-n)+n);
8.replace();
10.true;
二、
1.undefined undefined;
...............................
1.所有的函数数据类型，都是Function这个类的一个实例；
2.所有的对象，都是Object这个基类的实例；
3.Function和Object的关系：
1) Object instanceof Function  =>true; 所有的类都是Function这个类的实例；
2) Function instanceof Object  =>true; 所有的对象，都是Object这个基类的实例；
3）Object.prototype 是 Function.prototype 的爹；
4）Object.prototype 是 Function.__proto__的爹；
4.函数的三种角色：
1）普通函数：形成私有作用域-》形参赋值-》预解释-》代码从上到下的执行以及内存和内存释放；
2）构造函数：实例，类，原型，__proto__
3）对象：跟普通对象的功能一模一样；（普通对象：属性和方法）；
5.call,apply,bind区别：
1）call，apply都是在改this指向，传完参数之后，让前面的函数立即执行；
区别：第二个参数不同：call从第二个参数开始，一个个的写参数； apply第二个参数是个数组；
2）bind：属于预处理机制； 先把bind前面的函数中的this改了，参数传了，然后返回一个修改后的函数；在需要的时候，手动调用；













